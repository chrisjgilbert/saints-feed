exit
c
n
image
n
description
n
article.xpath("//meta[@property='og:title']/@content").text
article.xpath("//meta[@property='og:title']/@content").value
article.xpath("//meta[@property='og:title']/@content")
article
n
exit
JSON.parse(article.search("script[type='application/ld+json']").text)["image"]
JSON.parse(article.search("script[type='application/ld+json']").text)
article.search("script[type='application/ld+json']").text
article.search("script[type='application/ld+json']").value
article.search("script[type='application/ld+json']").content
article.search("script[type='application/ld+json']")
JSON.parse(article.search("script[type='application/ld+json']"))
article.search("script[type='application/ld+json']")
article.search("script")
article.xpath('//*[@itemscope]')
article
n
c
reload!
article_paths
c
dedup_article_paths
exit
reload!
get(LANDING_URL).xpath("//article//a[1]/@href").map(&:value)
get(LANDING_URL).xpath("//article//a[0]/@href").map(&:value)
get(LANDING_URL).xpath("//article//a[1]/@href").map(&:value)
article_paths
exit
c
n
exit
created_articles
, :duplicate_articles
duplicate_articles
c
reload!
duplicate_articles
c
exc
n
source.articles.exists?(url: BASE_URL + path)
c
exc
n
exit
article.xpath('//meta[@property="og:title"]/@content').text
article.xpath('//meta[@property="og:title"]/@content')
article.xpath('//meta[@name="og:title"]/@content')
article.xpath('//meta[@name="og:image"]/@content')
article.search("meta")
article.path
article.url
article
article.xpath('//meta[@name="og:image"]/@content')
article.xpath('//meta[@name="og:image"]/@content').text
article.xpath('//meta[@name="image"]/@content').text
article.xpath('//meta[@name="description"]/@content').text
article.xpath('//meta[@name="description"]/@content')
article.xpath('//meta[@name="description"]')
article.xpath('//meta[@name="og:description"]')
article.xpath('//meta[@name="og:title"]')
article.xpath('//meta[@name="title"]')
article.xpath('/meta[@name="title"]')
article.xpath('/meta[@name="og:title"]')
article.xpath('/meta[@name="og:title"]/@content')
article.xpath('//meta[@name="og:title"]/@content')
article.xpath('//meta[@name="og:title"]/@content').text
c
exit
c
Source.first.scraper.call
Source.first
Article.destroy_all
doc.xpath('/html/head/meta[@name="description"]/@content').text
doc.xpath('/html/head/meta[@name="description"]/@content')
doc.xpath('/html/head/meta[@name="description"]').value
doc.xpath('/html/head/meta[@name="description"]').content
doc.xpath('/html/head/meta[@name="description"]').text
doc.xpath('/html/head/meta[@name="description"]')
doc.xpath('/html/meta[@name="description"]')
doc.xpath('html/meta[@name="description"]')
doc.xpath('//meta[@name="description"]')
doc.xpath('/meta[@name="description"]')
doc.xpath('/html/head/meta[@name="description"]')
doc.xpath('/html/head/meta')
doc.xpath('meta[@name="title"]')
doc.xpath('meta[@name="description"]')
doc.xpath('meta[@name="description"]/@content')
doc.xpath("meta[@name="description"]/@content")
doc
doc = Nokogiri::HTML(URI.open(LANDING_URL))k
doc = Nokogiri::HTML(URI.open(LANDING_URL))
tag = Nokogiri::HTML(URI.open(LANDING_URL)).xpath("/html/head")
tag = Nokogiri::HTML(URI.open(LANDING_URL)).xpath("/html/head/title").text
tag = Nokogiri::HTML(URI.open(LANDING_URL)).xpath("/html/head/title")
tag = Nokogiri::HTML(URI.open(LANDING_URL)).xpath("/meta[@property='title']")
tag = Nokogiri::HTML(URI.open(LANDING_URL)).xpath("//meta[@property='title']")
tag = Nokogiri::HTML(URI.open(LANDING_URL)).xpath("//meta[@property='og:title']")
tag = Nokogiri::HTML(URI.open(LANDING_URL)).xpath("//meta[@property='og:title']/@content")
tag = Nokogiri::HTML(URI.open(LANDING_URL)).xpath("//meta[@property='og:title']/@content").text
tag = Nokogiri::HTML(URI.open(LANDING_URL)).xpath("//meta[@property='og:title']/@content"").text
tag = Nokogiri::HTML(URI.open(LANDING_URL)).xpath("/html/head/description").text
tag = Nokogiri::HTML(URI.open(LANDING_URL)).xpath("/html/head/title").text
tag = Nokogiri::HTML(URI.open(LANDING_URL)).xpath("/html/head/title")
tag = Nokogiri::HTML(URI.open(LANDING_URL)).xpath("/html/head/title").content
tag = Nokogiri::HTML(URI.open(LANDING_URL)).xpath("/html/head/title").value
tag = Nokogiri::HTML(URI.open(LANDING_URL)).xpath("/html/head/title")
tag = Nokogiri::HTML(URI.open(LANDING_URL)).xpath("title")
tag = Nokogiri::HTML(URI.open(LANDING_URL)).xpath("/meta/title")
tag = Nokogiri::HTML(URI.open(LANDING_URL)).search("meta[name='title']")
dock = Nokogiri::HTML(URI.open(LANDING_URL)).search("meta[name='robots']").value
dock = Nokogiri::HTML(URI.open(LANDING_URL)).search("meta[name='robots']")
dock = Nokogiri::HTML(URI.open(LANDING_URL)).search("meta").count
dock = Nokogiri::HTML(URI.open(LANDING_URL)).search("meta")
dock = Nokogiri::HTML(URI.open(LANDING_URL))
Nokogiri::HTML(URI.open(LANDING_URL))
get("#{BASE_URL}#{path}")
article
c
n
source.articles
